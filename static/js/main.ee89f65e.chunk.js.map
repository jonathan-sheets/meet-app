{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","summary","start","dateTime","location","onClick","href","htmlLink","target","rel","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","WarningAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","startsWith","done","navigator","onLine","localStorage","getItem","parsedEvents","JSON","parse","getAccessToken","token","url","axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","currentLocation","eventCount","filteredEvents","slice","mounted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","atatus","install","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ee89f65e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const { event } = this.props;\n\n    return (\n      <div className=\"event\">\n        <div className=\"event-overview\">\n          <h2>{event.summary}</h2>\n          <p>{event.start.dateTime}</p>\n          <p>@{event.summary} | {event.location}</p>\n          {!showDetails && (\n            <button \n              className=\"details-button\"\n              onClick={this.handleShowDetails}\n            >\n              Show Details\n            </button>\n          )}\n          {showDetails && (\n            <button \n              className=\"details-button\"\n              onClick={this.handleShowDetails}\n            >\n              Hide Details\n            </button>\n          )}\n        </div>\n\n        {showDetails && (\n          <div className=\"expanded-details\">\n            <h3>About this event:</h3>\n            <a href={event.htmlLink}\n               target='_blank'\n               rel='noreferrer'\n            >\n              <button className=\"see-details\">See details on Google Calendar</button>\n            </a>\n            <p>{event.description}</p>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n      this.color = 'red';\n  }\n}\n\nexport { InfoAlert, WarningAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We cannot find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n      query: value,\n      suggestions,\n      infoText:''\n      });\n    }\n  };\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n      infoText:''\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <h2 className=\"search-instruction\">Choose a city:</h2>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n          placeholder=\"Search cities\"\n        />  \n        <ul \n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {}: { display: 'none' }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key='all' \n              onClick={() => this.handleItemClicked(\"all\")}\n          >\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 24,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value\n    });\n\n    if(value < 1 || value > 24) {\n      this.setState({\n        infoText: 'Please choose a number between 1 and 24'\n      })\n    } else {\n      this.setState({\n        infoText: ''\n      })\n    }\n    this.props.updateEvents(null, value);\n  };\n\n  render() {\n    return (\n      <div className=\"number-of-events\">\n        <ErrorAlert text={this.state.infoText} />\n        <label className=\"number-of-events-label\">Maximum Number of Events To Display:</label>\n          <input \n            type=\"number\"\n            className=\"events-number\"\n            value={this.state.numberOfEvents}\n            onChange={this.handleInputChanged}\n          >\n          </input>\n\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n  },\n\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n  }\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n     window.location.protocol +\n     '//' +\n     window.location.host +\n     window.location.pathname;\n   window.history.pushState('','', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('','', newurl);\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n   `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n  .then((res) => res.json())\n  .catch((error) => error.json());\n\n  return result;\n  };\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n export const extractLocations = (events) => {\n   let extractLocations = events.map((event) => event.location);\n   let locations = [...new Set(extractLocations)];\n   return locations;\n };\n\n export const getEvents = async () => {\n   NProgress.start();\n\n   if (window.location.href.startsWith('http://localhost')) {\n     NProgress.done();\n     return mockData;\n   }\n\n   if (!navigator.onLine) {\n     const events = localStorage.getItem(\"lastEvents\");\n     const parsedEvents = JSON.parse(events).events;\n     NProgress.done();\n     return parsedEvents;\n   }\n\n   const token = await getAccessToken();\n\n   if (token) {\n     removeQuery();\n     const url = `https://hljjdhyu0f.execute-api.us-west-1.amazonaws.com/dev/api/get-events/${token}`;\n     const result = await axios.get(url);\n     if (result.data) {\n       let locations = extractLocations(result.data.events);\n       localStorage.setItem('lastEvents', JSON.stringify(result.data));\n       localStorage.setItem('locations', JSON.stringify(locations));\n     }\n     NProgress.done();\n     return result.data.events;\n   }\n };\n\n export const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n       \"https://hljjdhyu0f.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://hljjdhyu0f.execute-api.us-west-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\nimport { WarningAlert } from './Alert';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 24,\n    currentLocation: 'all',\n    infoText: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      const { numberOfEvents } = this.state;\n      if (this.mounted) {\n        const filteredEvents = events.slice(0, numberOfEvents);\n        this.setState({ \n          events: filteredEvents,\n          locations: extractLocations(events),\n        });\n      }\n\n      if (!navigator.onLine) {\n        this.setState({\n          infoText: 'You are currently offline and the list of events may not be accurate.  Please relaunch the app once online to view up-to-date events.'\n        });\n      }\n    });\n  }\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === 'all'\n          ? events\n          : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === 'all'\n          ? events\n          : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"offlineAlert\">\n          <WarningAlert text={this.state.infoText} />\n        </div>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={numberOfEvents} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('eb6c018250aa4416a6f92e67cb039f18').install();\n// atatus.notify(new Error('Test Atatus Setup'));\nserviceWorkerRegistration.register();"],"sourceRoot":""}